stages:
  - build
  - deploy
  
cache:
  paths:
    - node_modules/

node-build:
  image: node:10
  stage: build
  variables:
    BUILD_ENV: $BUILD_ENV
  before_script:
    - npm install
    - npm install -g @angular/cli@8
  script: "npm run build:$BUILD_ENV"
  artifacts:
    paths:
      - dist/
  only:
    - develop
    - master

deploy-develop:
  stage: deploy
  variables:
    HEROKU_API_KEY: $HEROKU_PRODUCTION_API_KEY
    HEROKU_APP: $HEROKU_APP
  before_script:
    - echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list
    - wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -
    - apt-get update
    - apt-get install -y heroku-toolbelt
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APP --api-key=$HEROKU_API_KEY
  only:
    - develop

deploy-production:
  image: python:3.6.3
  stage: deploy
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  before_script:
    - python3 -m pip install awscli
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    - touch ~/.aws/config
    - printf "[profile eb-cli]\nregion=us-east-1\noutput=json" >> ~/.aws/config
  script:
    - aws s3 sync dist/ s3://butler-web/${CI_COMMIT_REF_NAME} --exclude ".DS_Store/*" --cache-control "max-age=120000" --delete --acl "public-read"
  only:
    - master